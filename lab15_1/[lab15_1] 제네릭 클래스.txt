	
---------------------------------------------------------
같은 타입의 원소 두개(주/종 원소)를 저장하는 제네릭 클래스를 정의하고 사용하는 프로그램을 다음과 같은 순서로 작성하시오.

(1) 다음 프로그램의 (가) 부분을 완성하시오.

// MyPair 객체를 생성하고 이용하는 프로그램
public class MyPairTest {
 public static void main(String[] args) {
  System.out.println("lab15_1: 홍길동");

  // 문자열을 주/종 원소로 갖는 MyPair 객체 pair를 생성
  MyPair pair = new MyPair("Seoul", "Pusan");

  // 주 원소를 변수에 저장 후 출력
  String master = pair.getMaster();
  System.out.println(master + "팀");
  
  // pair를 출력
  System.out.println(pair);

  // pair의 주/종 원소를 교환
  pair.swap();

  // pair를 출력
  System.out.println(pair);
 }
}


// String형 주/종 원소를 저장하는 클래스
class MyPair {
 private String master; // 주 원소
 private String slave; // 종 원소

 public MyPair(String master, String slave) { // 생성자
  this.master = master;
  this.slave = slave;
 }

 public void swap() {  //  주/종 원소를 교환하는 메소드
  

  // ... (가)

 

 }

 public String getMaster() {
  return master;
 }
 
 public String getSlave() {
  return slave;
 }
 
 @Override
 public String toString() { 
  return "주=" + master + " 종=" + slave;
 }
}


class Student {
 private String name;
 public Student(String name) {
  this.name = name;
 }
 @Override
 public String toString() {
  return name;
 }
}


완성된 프로그램의 실행 결과는 다음과 같다.

lab15_1: 홍길동
Seoul팀
주=Seoul 종=Pusan
주=Pusan 종=Seoul

 

 

 

 


(2) 위의 프로그램에서 MyPair를 제네릭 클래스로 수정하시오.(주/종 원소가 String 타입 외 모든 타입에 적용 가능하도록)

   
(3) 그에 따라 main 메소드도 수정하시오.


완성된 프로그램의 실행 결과는 다음과 같다.

lab15_1: 홍길동
Seoul팀
주=Seoul 종=Pusan
주=Pusan 종=Seoul


(4) main 메소드에 다음 코드를 추가하시오.

// 학생(Student) 객체를 두 개 생성
// 이 두 Student 객체를 주/종 원소로 갖는 MyPair 객체 studentPair를 생성
// studentPair를 출력
// studentPair의 주/종 원소를 교환
// studentPair를 출력

// 정수(Integer) 객체 두 개 생성
// 이 두 Integer 객체를 주/종 원소로 갖는 MyPair 객체 integerPair를 생성
// integerPair를 출력
// integerPair의 주/종 원소를 교환
// integerPair를 출력


** raw type 즉, 타입 매개변수를 갖지 않는 제네릭 클래스 사용하지 말 것


- 실행 예

lab15_1: 홍길동
Seoul팀
주=Seoul 종=Pusan
주=Pusan 종=Seoul

주=kim 종=park
주=park 종=kim

주=11 종=22
주=22 종=11


----------------------------------------------------------
목적
- 제네릭 클래스 작성과 사용을 이해한다.

----------------------------------------------------------
유의사항
- 적절한 comment
  작성자, 작성일, 파일 내용 설명 등의 주석을 파일의 가장 앞부분에 둘것
- 들여쓰기
- 식별자 이름을 관례에 맞게 적절히 붙일 것
- command-line에서 java -jar 과제코드.jar 로 채점합니다.
철자도 똑같게 이 명령이 제대로 실행되어야 합니다.
- 과제코드와 본인의 이름을 맨 처음 출력

----------------------------------------------------------
제출 
- 과제코드.jar 파일
- .java 파일